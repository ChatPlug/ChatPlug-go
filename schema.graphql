type Thread {
    name: String!
    originId: String!
    messages: [Message!]!
    threadGroupId: ID!
    service: ServiceInstance!
    readonly: Boolean
    iconUrl: String!
    id: ID!
}

type ThreadSearchResult {
    name: String!
    iconUrl: String
    originId: String!
}

input ThreadSearchResultInput {
    name: String!
    originId: String!
    iconUrl: String
}

type Service {
	name: String!
    displayName: String!
    description: String!
    version: String!
    type: String!
    entryPoint: String!
}

enum InstanceStatus {
  RUNNING
  INITIALIZED
  CONFIGURED
  SHUTTING_DOWN
  STOPPED
}

type ServiceInstance {
    id: ID!
    name: String!
    status: InstanceStatus!
    service: Service!
}

type NewServiceInstanceCreated {
    instance: ServiceInstance!
    accessToken: String!
}

type ThreadGroup {
    id: ID!
    name: String!
    messages: [Message!]!
    threads: [Thread!]!
}

type Message {
    id: ID!
    originId: String!
    author: MessageAuthor!
    thread: Thread!
    body: String!
    threadGroupId: ID!
    attachments: [Attachment!]!
}

type MessageAuthor {
    id: ID!
    originId: String!
    username: String!
    avatarUrl: String!
}

type MessagePayload {
    targetThreadId: ID!
    message: Message!
}

enum AttachmentType {
    FILE
    IMAGE
    AUDIO
    VIDEO
}

type Attachment {
    id: ID!
    originId: String!
    type: AttachmentType!
    sourceUrl: String!
}

input MessageAuthorInput {
    originId: String!
    username: String!
    avatarUrl: String!
}

input AttachmentInput {
    originId: String!
    type: AttachmentType!
    sourceUrl: String!
}

input MessageInput {
    body: String!
    author: MessageAuthorInput!
    attachments: [AttachmentInput!]!
    originId: String!
    originThreadId: String!
    avatarUrl: String
}

input ThreadInput {
    instanceId: String!
    originId: String!
    groupId: ID!
    readonly: Boolean
    iconUrl: String
    name: String!
}

type Query {
  messages: [Message!]!
  instances: [ServiceInstance!]!
  services: [Service!]!
  threadGroups: [ThreadGroup!]!
}

enum ConfigurationFieldType {
    BOOLEAN
    STRING
    NUMBER
}

input ConfigurationField {
    name: String!
	type: ConfigurationFieldType!
    defaultValue: String!
    optional: Boolean!
    hint: String!
    mask: Boolean!
}

input ConfigurationRequest {
	fields: [ConfigurationField!]!
}

type ConfigurationResult {
    name: String!
    value: String!
}

type ConfigurationResponse {
	fieldValues: [ConfigurationResult!]!
}

type SearchRequest {
    query: String!
}

type SearchResponse {
    forQuery: String!
    threads: [ThreadSearchResult!]!
}


type Mutation {
    sendMessage(input: MessageInput!): Message!
    createThreadGroup(name: String!): ThreadGroup!
    deleteThreadGroup(id: ID!): ID!
    deleteServiceInstance(id: ID!): ID!
    deleteThread(id: ID!): ID!
    addThreadToGroup(input: ThreadInput): ThreadGroup!
    setInstanceStatus(status: InstanceStatus): ServiceInstance!
    createNewInstance(serviceModuleName: String!, instanceName: String!): NewServiceInstanceCreated!
    setSearchResponse(forQuery: String!, threads: [ThreadSearchResultInput!]!): SearchResponse
    searchThreadsInService(q: String!, instanceID: String!): SearchResponse
}

type Subscription {
    messageReceived: MessagePayload!
    configurationReceived(configuration: ConfigurationRequest!): ConfigurationResponse!
    subscribeToSearchRequests: SearchRequest!
}

